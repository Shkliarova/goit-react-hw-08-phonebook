{"version":3,"file":"static/js/411.e06c0065.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n    return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()));\n})","import styled from \"styled-components\";\nimport {Form, Field, ErrorMessage} from \"formik\"\n\nexport const ContactsForm = styled(Form)`\ndisplay: flex;\ngap: 8px;`\n\nexport const ContactsField = styled(Field)`\nmargin-left: 4px;`\n\nexport const FormButton = styled.button`\nmargin-left: 25px;\nheight: 24px;`\n\nexport const FormError = styled(ErrorMessage)`\ncolor: red;`","import {Formik} from \"formik\"\nimport * as Yup from 'yup';\nimport { ContactsForm, ContactsField, FormButton, FormError } from \"./ContactForm.styled\";\nimport { useDispatch } from \"react-redux\"\nimport { addContacts } from \"../../redux/contacts/operations\";\n\nconst contactSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    number: Yup.string()\n    .matches(/^\\d{3}-\\d{2}-\\d{2}$/g, 'Number format: xxx-xx-xx')\n    .required('Required')\n})\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n\n    return(\n        <Formik initialValues={{\n            name: '',\n            number: ''\n        }}\n        validationSchema={contactSchema}\n        onSubmit={(values, actions) => {\n            dispatch(addContacts(values));\n            actions.resetForm();\n        }}>\n            <ContactsForm>\n                <label>\n                    Name\n                    <ContactsField type=\"text\" name=\"name\" required /><br/>\n                </label>\n                <label>\n                    Number\n                    <ContactsField type=\"tel\" name=\"number\" placeholder=\"xxx-xx-xx\" required /><br/>\n                    <FormError name=\"number\" component=\"span\"/>\n                </label>\n\n                <FormButton type=\"submit\">Add contact</FormButton>\n            </ContactsForm>\n        </Formik>\n    )\n}","import styled from \"styled-components\";\n\nexport const ContactsList = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 4px;`\n\nexport const DeleteButton = styled.button`\nmargin-left: 16px;`","import { selectFilteredContacts } from \"../../redux/contacts/selectors\";\nimport { ContactsList, DeleteButton } from \"./ContactList.styled\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFilteredContacts);\n\n    return(\n        <ContactsList>\n            {contacts.map(item => \n            <li key={item.id}>\n                {item.name}: <i>{item.number}</i>\n                <DeleteButton onClick={()=>dispatch(deleteContact(item.id))}>delete</DeleteButton>\n            </li>)}\n        </ContactsList>\n    )\n}","import { useDispatch, useSelector } from \"react-redux\"\nimport { updateFilter } from \"../../redux/contacts/filterSlice\";\nimport { selectFilter } from \"../../redux/contacts/selectors\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    return(\n        <div>\n            <input type=\"text\" value={filter} \n            onChange={e => dispatch(updateFilter(e.target.value))}/>\n        </div>\n    )\n}","import styled from \"styled-components\"\n\nexport const AppWrapper = styled.div`\ndisplay: flex;\ngap: 8px;\nflex-direction: column;\nborder: 1px solid black;\nbox-shadow: 5px 5px 10px rgba(0, 0, 0, 0.3);\npadding: 15px;\nwidth: 700px;\nmargin: 0 auto;`","import { selectContacts, selectError, selectIsLoading } from \"../../redux/contacts/selectors\"\nimport { ContactForm } from \"../../components/ContactForm/ContactForm\"\nimport { ContactList } from \"../../components/ContactList/ContactList\"\nimport { Filter } from \"../../components/Filter/Filter\"\nimport { AppWrapper } from \"./Contacts.styled\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/contacts/operations\"\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n    return(\n      <AppWrapper>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        {contacts.length > 0 && <ContactList />}\n      </AppWrapper>\n    )\n  }"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactsForm","styled","Form","_templateObject","_taggedTemplateLiteral","ContactsField","Field","_templateObject2","FormButton","_templateObject3","FormError","ErrorMessage","_templateObject4","contactSchema","Yup","shape","required","number","matches","ContactForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","addContacts","resetForm","children","_jsxs","type","placeholder","component","ContactsList","DeleteButton","ContactList","useSelector","map","item","onClick","deleteContact","id","Filter","value","onChange","e","updateFilter","target","AppWrapper","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}