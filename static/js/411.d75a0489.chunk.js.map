{"version":3,"file":"static/js/411.d75a0489.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n    return contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()));\n})","import styled from \"styled-components\";\nimport {Form, Field, ErrorMessage} from \"formik\"\n\nexport const ContactsForm = styled(Form)`\ndisplay: flex;\ngap: 4px;\nflex-direction: column;`\n\nexport const ContactsField = styled(Field)`\nmargin-left: 4px;\nborder-color: #1976d2;\nopacity: 50%;\nwidth: 230px;\nfont-size: 18px;\ntext-indent: 8px;\nborder-radius: 5px;\n\n&::placeholder{\n    font-size: 18px;\n    text-indent: 8px;\n}`\n\nexport const FormError = styled(ErrorMessage)`\ncolor: red;\nmargin: 0 auto;`","import {Formik} from \"formik\"\nimport * as Yup from 'yup';\nimport { ContactsForm, ContactsField, FormError } from \"./ContactForm.styled\";\nimport { useDispatch } from \"react-redux\"\nimport { addContacts } from \"../../redux/contacts/operations\";\nimport { Button } from \"@mui/material\";\n\nconst contactSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    number: Yup.string()\n    .matches(/^\\d{3}-\\d{2}-\\d{2}$/g, 'Number format: xxx-xx-xx')\n    .required('Required')\n})\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n\n    return(\n        <Formik initialValues={{\n            name: '',\n            number: ''\n        }}\n        validationSchema={contactSchema}\n        onSubmit={(values, actions) => {\n            dispatch(addContacts(values));\n            actions.resetForm();\n        }}>\n            <ContactsForm>\n                <div style={{display: \"flex\", gap: \"8px\"}}>\n                <ContactsField type=\"text\" name=\"name\" required />\n                <ContactsField type=\"tel\" name=\"number\" placeholder=\"xxx-xx-xx\" required/>\n                <Button variant=\"contained\" type=\"submit\" style={{marginLeft: \"auto\"}}>Add contact </Button>\n                </div>\n                <FormError name=\"number\" component=\"span\"/>\n            </ContactsForm>\n        </Formik>\n    )\n}","import styled from \"styled-components\";\n\nexport const ContactsList = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 4px;\nmargin-top: 12px`\n","import { selectFilteredContacts } from \"../../redux/contacts/selectors\";\nimport { ContactsList } from \"./ContactList.styled\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport { Button } from \"@mui/material\";\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFilteredContacts);\n\n    return(\n        <ContactsList>\n            {contacts.map(item => \n            <li key={item.id} style={{fontSize: \"large\"}}>\n                {item.name}: <i>{item.number}</i>\n                <Button variant=\"contained\" size=\"small\" onClick={()=>dispatch(deleteContact(item.id))}\n                style={{marginLeft: \"16px\"}}>delete</Button>\n            </li>)}\n        </ContactsList>\n    )\n}","import { useDispatch, useSelector } from \"react-redux\"\nimport { updateFilter } from \"../../redux/contacts/filterSlice\";\nimport { selectFilter } from \"../../redux/contacts/selectors\";\nimport { TextField } from \"@mui/material\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    return(\n        <div>\n            <TextField id=\"standard-basic\" label=\"Enter the name of the contact\" variant=\"standard\" type=\"text\" value={filter} \n            onChange={e => dispatch(updateFilter(e.target.value))} style={{width: \"600px\"}}/>\n        </div>\n    )\n}","import styled from \"styled-components\"\n\nexport const AppWrapper = styled.div`\ndisplay: flex;\ngap: 8px;\nflex-direction: column;\nborder: 1px solid #1976d2;\nbox-shadow: 5px 5px 10px #1976d2;\npadding: 15px;\nwidth: 700px;\nmargin: 5% auto;`","import { selectContacts, selectError, selectIsLoading } from \"../../redux/contacts/selectors\"\nimport { ContactForm } from \"../../components/ContactForm/ContactForm\"\nimport { ContactList } from \"../../components/ContactList/ContactList\"\nimport { Filter } from \"../../components/Filter/Filter\"\nimport { AppWrapper } from \"./Contacts.styled\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/contacts/operations\"\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n    return(\n      <AppWrapper>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        {contacts.length > 0 && <ContactList />}\n      </AppWrapper>\n    )\n  }"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactsForm","styled","Form","_templateObject","_taggedTemplateLiteral","ContactsField","Field","_templateObject2","FormError","ErrorMessage","_templateObject3","contactSchema","Yup","shape","required","number","matches","ContactForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","addContacts","resetForm","children","_jsxs","style","display","gap","type","placeholder","Button","variant","marginLeft","component","ContactsList","ContactList","useSelector","map","item","fontSize","size","onClick","deleteContact","id","Filter","TextField","label","value","onChange","e","updateFilter","target","width","AppWrapper","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}