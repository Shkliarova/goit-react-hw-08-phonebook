{"version":3,"file":"static/js/411.a0c9d87a.chunk.js","mappings":"4MAEaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,SAASA,SAASC,KAAM,EAExDC,EAAkB,SAAAH,GAAK,OAAIA,EAAMC,SAASA,SAASG,SAAU,EAE7DC,EAAc,SAAAL,GAAK,OAAIA,EAAMC,SAASA,SAASK,KAAM,EAErDC,EAAe,SAAAP,GAAK,OAAIA,EAAMQ,OAAOA,MAAO,EAE5CC,GAAyBC,EAAAA,EAAAA,IAAe,CAACX,EAAgBQ,IAAe,SAACN,EAAUO,GAC5F,OAAOP,EAASO,QAAO,SAAAG,GAAO,OAC1BA,EAAQC,KAAKC,cAAcC,SAASN,EAAOK,cAAc,GACjE,I,uCCVaE,GAAeC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4DAK3BC,GAAgBJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,8MAc7BI,GAAYP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAoBS,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sC,uCCdvCO,EAAgBC,EAAAA,KAAaC,MAAM,CACrChB,KAAMe,EAAAA,KAAaE,SAAS,YAC5BC,OAAQH,EAAAA,KACPI,QAAQ,uBAAwB,4BAChCF,SAAS,cAGDG,EAAc,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACXjC,GAAWkC,EAAAA,EAAAA,IAAYpC,GAE7B,OACIqC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CAACC,cAAe,CACnB1B,KAAM,GACNkB,OAAQ,IAEZS,iBAAkBb,EAClBc,SAAU,SAACC,EAAQC,GACKzC,EAAS0C,MAAK,SAAChC,GAAO,OAC1CA,EAAQC,KAAKC,gBAAkB4B,EAAO7B,KAAKC,eAC3CF,EAAQmB,SAAWW,EAAOX,MAAM,KAIlCc,MAAM,8CACNF,EAAQG,cAENZ,GAASa,EAAAA,EAAAA,IAAYL,IACrBC,EAAQG,YAEZ,EAAEE,UACEC,EAAAA,EAAAA,MAACjC,EAAY,CAAAgC,SAAA,EACTC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAACC,QAAS,OAAQC,IAAK,OAAOJ,SAAA,EAC1CX,EAAAA,EAAAA,KAAChB,EAAa,CAACgC,KAAK,OAAOxC,KAAK,OAAOiB,UAAQ,KAC/CO,EAAAA,EAAAA,KAAChB,EAAa,CAACgC,KAAK,MAAMxC,KAAK,SAASyC,YAAY,YAAYxB,UAAQ,KACxEO,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,QAAQ,YAAYH,KAAK,SAASH,MAAO,CAACO,WAAY,QAAQT,SAAC,qBAEvEX,EAAAA,EAAAA,KAACb,EAAS,CAACX,KAAK,SAAS6C,UAAU,aAInD,EC/CaC,EAAe1C,EAAAA,GAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8ECIxBwC,EAAc,WACvB,IAAM1B,GAAWC,EAAAA,EAAAA,MACXjC,GAAWkC,EAAAA,EAAAA,IAAY1B,GAE7B,OACI2B,EAAAA,EAAAA,KAACsB,EAAY,CAAAX,SACR9C,EAAS2D,KAAI,SAAAC,GAAI,OAClBb,EAAAA,EAAAA,MAAA,MAAkBC,MAAO,CAACa,SAAU,SAASf,SAAA,CACxCc,EAAKjD,KAAK,MAAEwB,EAAAA,EAAAA,KAAA,KAAAW,SAAIc,EAAK/B,UACtBM,EAAAA,EAAAA,KAACkB,EAAAA,EAAM,CAACC,QAAQ,YAAYQ,KAAK,QAAQC,QAAS,kBAAI/B,GAASgC,EAAAA,EAAAA,IAAcJ,EAAKK,IAAI,EACtFjB,MAAO,CAACO,WAAY,QAAQT,SAAC,aAHxBc,EAAKK,GAIT,KAGjB,E,oBCfaC,EAAS,WAClB,IAAMlC,GAAWC,EAAAA,EAAAA,MACX1B,GAAS2B,EAAAA,EAAAA,IAAY5B,GAE3B,OACI6B,EAAAA,EAAAA,KAAA,OAAAW,UACIX,EAAAA,EAAAA,KAACgC,EAAAA,EAAS,CAACF,GAAG,iBAAiBG,MAAM,gCAAgCd,QAAQ,WAAWH,KAAK,OAAOkB,MAAO9D,EAC3G+D,SAAU,SAAAC,GAAC,OAAIvC,GAASwC,EAAAA,EAAAA,IAAaD,EAAEE,OAAOJ,OAAO,EAAErB,MAAO,CAAC0B,MAAO,YAGlF,ECbaC,EAAa5D,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4K,UCOrB,SAAS0D,IACtB,IAAM5E,GAAWkC,EAAAA,EAAAA,IAAYpC,GACvBkC,GAAWC,EAAAA,EAAAA,MACX9B,GAAY+B,EAAAA,EAAAA,IAAYhC,GACxBG,GAAQ6B,EAAAA,EAAAA,IAAY9B,GAMxB,OAJFyE,EAAAA,EAAAA,YAAU,WACR7C,GAAS8C,EAAAA,EAAAA,MACX,GAAG,CAAC9C,KAGAe,EAAAA,EAAAA,MAAC4B,EAAU,CAAA7B,SAAA,EACTX,EAAAA,EAAAA,KAAA,MAAAW,SAAI,eACJX,EAAAA,EAAAA,KAACJ,EAAW,KACZI,EAAAA,EAAAA,KAAA,MAAAW,SAAI,cACJX,EAAAA,EAAAA,KAAC+B,EAAM,IACN/D,IAAcE,IAAS8B,EAAAA,EAAAA,KAAA,KAAAW,SAAG,2BAC1B9C,EAAS+E,OAAS,IAAK5C,EAAAA,EAAAA,KAACuB,EAAW,MAG1C,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts/Contacts.styled.js","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\n\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectFilter = state => state.filter.filter;\n\nexport const selectFilteredContacts = createSelector([selectContacts, selectFilter], (contacts, filter) => {\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase()));\n})","import styled from \"styled-components\";\nimport {Form, Field, ErrorMessage} from \"formik\"\n\nexport const ContactsForm = styled(Form)`\ndisplay: flex;\ngap: 4px;\nflex-direction: column;`\n\nexport const ContactsField = styled(Field)`\nmargin-left: 4px;\nborder-color: #1976d2;\nopacity: 50%;\nwidth: 230px;\nfont-size: 18px;\ntext-indent: 8px;\nborder-radius: 5px;\n\n&::placeholder{\n    font-size: 18px;\n    text-indent: 8px;\n}`\n\nexport const FormError = styled(ErrorMessage)`\ncolor: red;\nmargin: 0 auto;`","import {Formik} from \"formik\"\nimport * as Yup from 'yup';\nimport { ContactsForm, ContactsField, FormError } from \"./ContactForm.styled\";\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { addContacts } from \"../../redux/contacts/operations\";\nimport { Button } from \"@mui/material\";\nimport { selectContacts } from \"../../redux/contacts/selectors\";\n\nconst contactSchema = Yup.object().shape({\n    name: Yup.string().required('Required'),\n    number: Yup.string()\n    .matches(/^\\d{3}-\\d{2}-\\d{2}$/g, 'Number format: xxx-xx-xx')\n    .required('Required')\n})\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts)\n\n    return(\n        <Formik initialValues={{\n            name: '',\n            number: ''\n        }}\n        validationSchema={contactSchema}\n        onSubmit={(values, actions) => {\n            const isDuplicate = contacts.some((contact) =>\n            contact.name.toLowerCase() === values.name.toLowerCase() ||\n            contact.number === values.number\n        );\n\n        if (isDuplicate) {\n          alert('This contact is already in your phonebook!');\n          actions.resetForm();\n        } else{\n            dispatch(addContacts(values));\n            actions.resetForm();\n        }\n        }}>\n            <ContactsForm>\n                <div style={{display: \"flex\", gap: \"8px\"}}>\n                <ContactsField type=\"text\" name=\"name\" required />\n                <ContactsField type=\"tel\" name=\"number\" placeholder=\"xxx-xx-xx\" required/>\n                <Button variant=\"contained\" type=\"submit\" style={{marginLeft: \"auto\"}}>Add contact </Button>\n                </div>\n                <FormError name=\"number\" component=\"span\"/>\n            </ContactsForm>\n        </Formik>\n    )\n}","import styled from \"styled-components\";\n\nexport const ContactsList = styled.ul`\ndisplay: flex;\nflex-direction: column;\ngap: 4px;\nmargin-top: 12px`\n","import { selectFilteredContacts } from \"../../redux/contacts/selectors\";\nimport { ContactsList } from \"./ContactList.styled\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContact } from \"../../redux/contacts/operations\";\nimport { Button } from \"@mui/material\";\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectFilteredContacts);\n\n    return(\n        <ContactsList>\n            {contacts.map(item => \n            <li key={item.id} style={{fontSize: \"large\"}}>\n                {item.name}: <i>{item.number}</i>\n                <Button variant=\"contained\" size=\"small\" onClick={()=>dispatch(deleteContact(item.id))}\n                style={{marginLeft: \"16px\"}}>delete</Button>\n            </li>)}\n        </ContactsList>\n    )\n}","import { useDispatch, useSelector } from \"react-redux\"\nimport { updateFilter } from \"../../redux/contacts/filterSlice\";\nimport { selectFilter } from \"../../redux/contacts/selectors\";\nimport { TextField } from \"@mui/material\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    const filter = useSelector(selectFilter);\n\n    return(\n        <div>\n            <TextField id=\"standard-basic\" label=\"Enter the name of the contact\" variant=\"standard\" type=\"text\" value={filter} \n            onChange={e => dispatch(updateFilter(e.target.value))} style={{width: \"600px\"}}/>\n        </div>\n    )\n}","import styled from \"styled-components\"\n\nexport const AppWrapper = styled.div`\ndisplay: flex;\ngap: 8px;\nflex-direction: column;\nborder: 1px solid #1976d2;\nbox-shadow: 5px 5px 10px #1976d2;\npadding: 15px;\nwidth: 700px;\nmargin: 5% auto;`","import { selectContacts, selectError, selectIsLoading } from \"../../redux/contacts/selectors\"\nimport { ContactForm } from \"../../components/ContactForm/ContactForm\"\nimport { ContactList } from \"../../components/ContactList/ContactList\"\nimport { Filter } from \"../../components/Filter/Filter\"\nimport { AppWrapper } from \"./Contacts.styled\"\nimport { useSelector, useDispatch } from \"react-redux\"\nimport { useEffect } from \"react\";\nimport { fetchContacts } from \"../../redux/contacts/operations\"\n\nexport default function Contacts() {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n    return(\n      <AppWrapper>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && !error && <b>Request in progress...</b>}\n        {contacts.length > 0 && <ContactList />}\n      </AppWrapper>\n    )\n  }"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","ContactsForm","styled","Form","_templateObject","_taggedTemplateLiteral","ContactsField","Field","_templateObject2","FormError","ErrorMessage","_templateObject3","contactSchema","Yup","shape","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","alert","resetForm","addContacts","children","_jsxs","style","display","gap","type","placeholder","Button","variant","marginLeft","component","ContactsList","ContactList","map","item","fontSize","size","onClick","deleteContact","id","Filter","TextField","label","value","onChange","e","updateFilter","target","width","AppWrapper","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}